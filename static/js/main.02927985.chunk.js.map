{"version":3,"sources":["Equation.js","Dropdown.js","InputField.js","App.js","index.js"],"names":["Equation","props","classes","isCalc","className","amt1","curr1","amt2","curr2","Dropdown","htmlFor","id","label","value","onChange","e","onBlur","options","map","item","key","symbol","disabled","disabledValue","name","InputField","type","placeholder","amount","currency","App","useState","coins","setCoins","currency1","setCurrency1","currency2","setCurrency2","rate1","setRate1","rate2","setRate2","amount1","setAmount1","amount2","setAmount2","changedField","setChangedField","loading","setLoading","networkError","setNetworkError","checkForErrors","response","ok","json","Error","statusText","roundIt","places","Math","round","Number","EPSILON","useEffect","fetch","then","data","tickerTop10","filter","obj","rank","price","quotes","USD","catch","error","console","log","length","find","coin","exchange1","exchange2","handleDropdown","newCurr1","target","newCurr2","handleAmountChange","onClick","one","fieldone","swapCurrencies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02927985.chunk.js","sourcesContent":["import React from 'react';\nimport './Equation.css';\n\n/**\n * Displays an equation with the two currencies.\n */\nfunction Equation(props) {\n  const classes = 'equation' + (props.isCalc ? ` calculated` : '');\n  return (\n    <p className={classes}>\n      {props.amt1} {props.curr1} = {props.amt2} {props.curr2}\n    </p>\n  );\n}\n\nexport default Equation;\n","import React from 'react';\nimport './select-css.css';\n\n/**\n * Display a dropdown with a currency.\n */\nfunction Dropdown(props) {\n  return (\n    <div className=\"control\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <select\n        id={props.id}\n        className=\"select-css\"\n        value={props.value}\n        onChange={(e) => props.onChange(e, props.id)}\n        onBlur={(e) => props.onChange(e, props.id)}>\n        {props.options.map((item) => (\n          <option\n            key={item.symbol}\n            value={item.symbol}\n            disabled={item.symbol === props.disabledValue}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport './InputField.css';\n\n/**\n * Display an input field so user can type in amounts.\n */\nfunction InputField(props) {\n  return (\n    <div className=\"control\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"input-wrap\">\n        <input\n          type=\"text\"\n          id={props.id}\n          className=\"input-amt\"\n          placeholder=\"Enter an amount\"\n          value={props.amount}\n          onChange={props.onChange}\n        />\n        <span>{props.currency}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default InputField;\n","import React, { useEffect, useState } from 'react';\nimport Equation from './Equation';\nimport Dropdown from './Dropdown';\nimport InputField from './InputField';\nimport './App.css';\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [currency1, setCurrency1] = useState({\n    symbol: 'BTC',\n    name: 'Bitcoin'\n  });\n  const [currency2, setCurrency2] = useState({\n    symbol: 'ETH',\n    name: 'Ethereum'\n  });\n  const [rate1, setRate1] = useState(1);\n  const [rate2, setRate2] = useState(1);\n  const [amount1, setAmount1] = useState('');\n  const [amount2, setAmount2] = useState('');\n  const [changedField, setChangedField] = useState('amount1');\n  const [loading, setLoading] = useState(true);\n  const [networkError, setNetworkError] = useState(false);\n\n  /**\n   * Call one time after component is mounted\n   */\n  useEffect(() => {\n    // Hit the API. First check for errors. If none, then filter the data to\n    // take only the top 10, then get fields\n    fetch('https://api.coinpaprika.com/v1/tickers')\n      .then(checkForErrors)\n      .then((data) => {\n        const tickerTop10 = data\n          .filter((obj) => {\n            if (obj.rank > 0 && obj.rank <= 10) {\n              return true;\n            }\n            return false;\n          })\n          .map((obj) => {\n            return {\n              id: obj.id,\n              name: obj.name,\n              symbol: obj.symbol,\n              rank: obj.rank,\n              price: obj.quotes.USD.price\n            };\n          });\n        setCoins(tickerTop10);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setNetworkError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  /**\n   * Call this to do the initial calculation and also a fresh calculation on\n   * every render.\n   */\n  useEffect(calculate);\n\n  /**\n   * A function to check for errors from API calls. If status is in range\n   * 200-299 then response.ok is true, else false.\n   */\n  function checkForErrors(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw Error(response.statusText);\n    }\n  }\n\n  /**\n   * Calculate and display the exchange rate between the selected currencies.\n   */\n  function calculate() {\n    if (coins.length > 0) {\n      const curr1 = coins.find((coin) => coin.symbol === currency1.symbol);\n      const curr2 = coins.find((coin) => coin.symbol === currency2.symbol);\n      const exchange1 = curr2.price / curr1.price;\n      const exchange2 = curr1.price / curr2.price;\n      setRate1(exchange1);\n      setRate2(exchange2);\n      if (changedField === 'amount1') {\n        setAmount2(amount1 * rate1);\n      } else {\n        setAmount1(amount2 * rate2);\n      }\n    }\n  }\n\n  /**\n   * Round a value for displaying. Start with 3 places. If less than 100, do 4\n   * places, and if really small do more places.\n   */\n  function roundIt(value) {\n    let places = 100;\n    if (value < 100) {\n      places = 10000;\n    } else if (value < 0.001) {\n      places = 1000000;\n    }\n    return Math.round((value + Number.EPSILON) * places) / places;\n  }\n\n  /**\n   * Handler for dropdown changes. Update the currency symbol for the changed\n   * dropdown.\n   */\n  const handleDropdown = (e, id) => {\n    if (id === 'curr1') {\n      const newCurr1 = coins.find((coin) => coin.symbol === e.target.value);\n      setCurrency1(newCurr1);\n    } else {\n      const newCurr2 = coins.find((coin) => coin.symbol === e.target.value);\n      setCurrency2(newCurr2);\n    }\n  };\n\n  /**\n   * Handle user typing in Amount fields\n   */\n  function handleAmountChange(e) {\n    if (e.target.id === 'amount1') {\n      setAmount1(Number(e.target.value));\n    } else {\n      setAmount2(Number(e.target.value));\n    }\n    // Set the changedField so calculate() knows who to update\n    setChangedField(e.target.id);\n  }\n\n  /**\n   * Handle click on Swap button. Swaps the selected currencies, and also the\n   * values of the Amount fields\n   */\n  const swapCurrencies = () => {\n    const one = currency1;\n    setCurrency1(currency2);\n    setCurrency2(one);\n    const fieldone = amount1;\n    setAmount1(amount2);\n    setAmount2(fieldone);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Currency Converter</h1>\n      </header>\n\n      <main className=\"App-main\">\n        <section className=\"App-section\">\n          <h2 className=\"visually-hidden\">Choose currencies</h2>\n\n          <div className=\"col\">\n            <Dropdown\n              id=\"curr1\"\n              label=\"Currency 1\"\n              options={coins}\n              value={currency1.symbol}\n              disabledValue={currency2.symbol}\n              onChange={handleDropdown}\n            />\n          </div>\n\n          <div className=\"col\">\n            <button className=\"btn-swap\" onClick={() => swapCurrencies()}>\n              Swap\n            </button>\n          </div>\n\n          <div className=\"col\">\n            <Dropdown\n              id=\"curr2\"\n              label=\"Currency 2\"\n              options={coins}\n              value={currency2.symbol}\n              disabledValue={currency1.symbol}\n              onChange={handleDropdown}\n            />\n          </div>\n\n          <div className=\"display\">\n            <Equation\n              amt1={1}\n              curr1={currency1.name}\n              amt2={roundIt(rate1)}\n              curr2={currency2.name}\n            />\n            <Equation\n              amt1={roundIt(rate2)}\n              curr1={currency1.name}\n              amt2={1}\n              curr2={currency2.name}\n            />\n          </div>\n        </section>\n\n        <section className=\"App-section\">\n          <h2 className=\"visually-hidden\">Enter amounts</h2>\n\n          <div className=\"col\">\n            <InputField\n              id=\"amount1\"\n              label=\"Amount of currency 1\"\n              amount={amount1}\n              currency={currency1.symbol}\n              onChange={handleAmountChange}\n            />\n          </div>\n\n          <div className=\"col\">\n            <InputField\n              id=\"amount2\"\n              label=\"Amount of currency 2\"\n              amount={amount2}\n              currency={currency2.symbol}\n              onChange={handleAmountChange}\n            />\n          </div>\n\n          <div className=\"display\">\n            <Equation\n              amt1={amount1 ? roundIt(amount1) : ''}\n              curr1={amount1 ? currency1.name : '---'}\n              amt2={amount2 ? roundIt(amount2) : ''}\n              curr2={amount2 ? currency2.name : '---'}\n              isCalc={true}\n            />\n          </div>\n        </section>\n\n        {loading ? (\n          <div className=\"loading\">\n            <div className=\"curtain\"></div>\n            <div className=\"loading-text\">Loading...</div>\n          </div>\n        ) : (\n          ''\n        )}\n        {networkError ? (\n          <p className=\"error\">\n            Network error while attempting to connect to API.\n          </p>\n        ) : (\n          ''\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}